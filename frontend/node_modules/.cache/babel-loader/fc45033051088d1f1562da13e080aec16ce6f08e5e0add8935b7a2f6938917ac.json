{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport { NavigationContext, RouterContext } from \"../shared/context.js\";\nimport { getItemPath, getItemTitle, matchPath } from \"../shared/navigation.js\";\nexport function useActivePage() {\n  var _routerContext$pathna;\n  const navigationContext = React.useContext(NavigationContext);\n  const routerContext = React.useContext(RouterContext);\n  const pathname = (_routerContext$pathna = routerContext === null || routerContext === void 0 ? void 0 : routerContext.pathname) !== null && _routerContext$pathna !== void 0 ? _routerContext$pathna : '/';\n  const activeItem = matchPath(navigationContext, pathname);\n  const rootItem = matchPath(navigationContext, '/');\n  return React.useMemo(() => {\n    if (!activeItem) {\n      return null;\n    }\n    const breadCrumbs = [];\n    if (rootItem) {\n      breadCrumbs.push({\n        title: getItemTitle(rootItem),\n        path: '/'\n      });\n    }\n    const segments = pathname.split('/').filter(Boolean);\n    let prefix = '';\n    for (const segment of segments) {\n      const path = \"\".concat(prefix, \"/\").concat(segment);\n      prefix = path;\n      const item = matchPath(navigationContext, path);\n      if (!item) {\n        continue;\n      }\n      const itemPath = getItemPath(navigationContext, item);\n      const lastCrumb = breadCrumbs[breadCrumbs.length - 1];\n      if ((lastCrumb === null || lastCrumb === void 0 ? void 0 : lastCrumb.path) !== itemPath) {\n        breadCrumbs.push({\n          title: getItemTitle(item),\n          path: itemPath\n        });\n      }\n    }\n    return {\n      title: getItemTitle(activeItem),\n      path: getItemPath(navigationContext, activeItem),\n      breadCrumbs\n    };\n  }, [activeItem, rootItem, pathname, navigationContext]);\n}","map":{"version":3,"names":["React","NavigationContext","RouterContext","getItemPath","getItemTitle","matchPath","useActivePage","_routerContext$pathna","navigationContext","useContext","routerContext","pathname","activeItem","rootItem","useMemo","breadCrumbs","push","title","path","segments","split","filter","Boolean","prefix","segment","concat","item","itemPath","lastCrumb","length"],"sources":["/Users/wilson/Documents/rate-my-dorm/node_modules/@toolpad/core/useActivePage/useActivePage.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { NavigationContext, RouterContext } from \"../shared/context.js\";\nimport { getItemPath, getItemTitle, matchPath } from \"../shared/navigation.js\";\nexport function useActivePage() {\n  const navigationContext = React.useContext(NavigationContext);\n  const routerContext = React.useContext(RouterContext);\n  const pathname = routerContext?.pathname ?? '/';\n  const activeItem = matchPath(navigationContext, pathname);\n  const rootItem = matchPath(navigationContext, '/');\n  return React.useMemo(() => {\n    if (!activeItem) {\n      return null;\n    }\n    const breadCrumbs = [];\n    if (rootItem) {\n      breadCrumbs.push({\n        title: getItemTitle(rootItem),\n        path: '/'\n      });\n    }\n    const segments = pathname.split('/').filter(Boolean);\n    let prefix = '';\n    for (const segment of segments) {\n      const path = `${prefix}/${segment}`;\n      prefix = path;\n      const item = matchPath(navigationContext, path);\n      if (!item) {\n        continue;\n      }\n      const itemPath = getItemPath(navigationContext, item);\n      const lastCrumb = breadCrumbs[breadCrumbs.length - 1];\n      if (lastCrumb?.path !== itemPath) {\n        breadCrumbs.push({\n          title: getItemTitle(item),\n          path: itemPath\n        });\n      }\n    }\n    return {\n      title: getItemTitle(activeItem),\n      path: getItemPath(navigationContext, activeItem),\n      breadCrumbs\n    };\n  }, [activeItem, rootItem, pathname, navigationContext]);\n}"],"mappings":"AAAA,YAAY;;AAEZ,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,iBAAiB,EAAEC,aAAa,QAAQ,sBAAsB;AACvE,SAASC,WAAW,EAAEC,YAAY,EAAEC,SAAS,QAAQ,yBAAyB;AAC9E,OAAO,SAASC,aAAaA,CAAA,EAAG;EAAA,IAAAC,qBAAA;EAC9B,MAAMC,iBAAiB,GAAGR,KAAK,CAACS,UAAU,CAACR,iBAAiB,CAAC;EAC7D,MAAMS,aAAa,GAAGV,KAAK,CAACS,UAAU,CAACP,aAAa,CAAC;EACrD,MAAMS,QAAQ,IAAAJ,qBAAA,GAAGG,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEC,QAAQ,cAAAJ,qBAAA,cAAAA,qBAAA,GAAI,GAAG;EAC/C,MAAMK,UAAU,GAAGP,SAAS,CAACG,iBAAiB,EAAEG,QAAQ,CAAC;EACzD,MAAME,QAAQ,GAAGR,SAAS,CAACG,iBAAiB,EAAE,GAAG,CAAC;EAClD,OAAOR,KAAK,CAACc,OAAO,CAAC,MAAM;IACzB,IAAI,CAACF,UAAU,EAAE;MACf,OAAO,IAAI;IACb;IACA,MAAMG,WAAW,GAAG,EAAE;IACtB,IAAIF,QAAQ,EAAE;MACZE,WAAW,CAACC,IAAI,CAAC;QACfC,KAAK,EAAEb,YAAY,CAACS,QAAQ,CAAC;QAC7BK,IAAI,EAAE;MACR,CAAC,CAAC;IACJ;IACA,MAAMC,QAAQ,GAAGR,QAAQ,CAACS,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC;IACpD,IAAIC,MAAM,GAAG,EAAE;IACf,KAAK,MAAMC,OAAO,IAAIL,QAAQ,EAAE;MAC9B,MAAMD,IAAI,MAAAO,MAAA,CAAMF,MAAM,OAAAE,MAAA,CAAID,OAAO,CAAE;MACnCD,MAAM,GAAGL,IAAI;MACb,MAAMQ,IAAI,GAAGrB,SAAS,CAACG,iBAAiB,EAAEU,IAAI,CAAC;MAC/C,IAAI,CAACQ,IAAI,EAAE;QACT;MACF;MACA,MAAMC,QAAQ,GAAGxB,WAAW,CAACK,iBAAiB,EAAEkB,IAAI,CAAC;MACrD,MAAME,SAAS,GAAGb,WAAW,CAACA,WAAW,CAACc,MAAM,GAAG,CAAC,CAAC;MACrD,IAAI,CAAAD,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEV,IAAI,MAAKS,QAAQ,EAAE;QAChCZ,WAAW,CAACC,IAAI,CAAC;UACfC,KAAK,EAAEb,YAAY,CAACsB,IAAI,CAAC;UACzBR,IAAI,EAAES;QACR,CAAC,CAAC;MACJ;IACF;IACA,OAAO;MACLV,KAAK,EAAEb,YAAY,CAACQ,UAAU,CAAC;MAC/BM,IAAI,EAAEf,WAAW,CAACK,iBAAiB,EAAEI,UAAU,CAAC;MAChDG;IACF,CAAC;EACH,CAAC,EAAE,CAACH,UAAU,EAAEC,QAAQ,EAAEF,QAAQ,EAAEH,iBAAiB,CAAC,CAAC;AACzD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}