{"ast":null,"code":"var _jsxFileName = \"/Users/wilson/Documents/rate-my-dorm/frontend/src/pages/DormPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport styles from \"../styles/dormpage.module.css\";\nimport Review from \"../components/Review\";\nimport Button from \"@mui/material/Button\";\nimport Nav from \"../components/Nav\";\nimport Footer from \"../components/Footer\";\nimport MZSQ from \"../assets/manzanita_banner.jpg\";\nimport MPW from \"../assets/mary-park-hall.jpg\";\nimport MWH from \"../assets/mary-ward-hall.jpg\";\nimport TCS from \"../assets/towers-at-centennial-square.jpg\";\nimport TJS from \"../assets/towers-junior-suite.png\";\nimport UPS from \"../assets/university-park-south.jpg\";\nimport UPN from \"../assets/university-park-north.jpg\";\nimport VCS from \"../assets/village-at-centennial-square.jpg\";\nimport WGC from \"../assets/west-grove-common.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dormBanners = {\n  \"Manzanita Square\": MZSQ,\n  \"Mary Park Hall\": MPW,\n  \"Mary Ward Hall\": MWH,\n  \"Towers At Centennial Square\": TCS,\n  \"Towers At Junior Suites\": TJS,\n  \"University Park South\": UPS,\n  \"University Park North\": UPN,\n  \"Village At Centennial Square\": VCS,\n  \"West Grove Common\": WGC\n};\nconst DormPage = ({\n  dormName,\n  reviewData\n}) => {\n  _s();\n  const [data, setData] = useState(reviewData);\n  useEffect(() => {\n    // Function to fetch reviews for a dorm\n    const fetchReviews = async () => {\n      try {\n        const response = await fetch(\"http://localhost:4000/api/get-reviews\", {\n          method: \"POST\",\n          // POST method to send data\n          headers: {\n            \"Content-Type\": \"application/json\" // Ensures data is sent in JSON format\n          },\n          body: JSON.stringify({\n            dormName\n          }) // Passing dormName in the request body\n        });\n        if (!response.ok) throw new Error(\"Failed to fetch reviews\");\n        const data = await response.json();\n        setData(data); // Set the reviews in state\n      } catch (error) {\n        console.error(\"Error fetching reviews:\", error);\n      }\n    };\n    fetchReviews(); // Call the function on component mount\n  }, [dormName]); // Re-run the effect if dormName changes (if needed)\n  const navigate = useNavigate();\n  function handleWriteReviewRouting() {\n    navigate(\"/write-review\", {\n      state: {\n        dormName: dormName\n      }\n    });\n  }\n  const reviews = data.map(val => {\n    return /*#__PURE__*/_jsxDEV(Review, {\n      userName: val.userName,\n      semester: val.semester,\n      rating: val.rating,\n      reviewTitle: val.reviewTitle,\n      review: val.review\n    }, uuidv4(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundImage: `url(${dormBanners[dormName]})`,\n        backgroundPosition: \"center\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundSize: \"100%\",\n        width: \"100%\",\n        minHeight: \"349px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles.bannerText,\n        children: dormName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.reviewsTableHeader,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Recent Reviews\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: styles.writeReview,\n        variant: \"contained\",\n        onClick: handleWriteReviewRouting,\n        children: \"Write Review\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.reviewsTable,\n      children: reviews\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(DormPage, \"08SvcNxMxPdbrnKpLabjiVBMkrw=\", false, function () {\n  return [useNavigate];\n});\n_c = DormPage;\nexport default DormPage;\nvar _c;\n$RefreshReg$(_c, \"DormPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","v4","uuidv4","styles","Review","Button","Nav","Footer","MZSQ","MPW","MWH","TCS","TJS","UPS","UPN","VCS","WGC","jsxDEV","_jsxDEV","dormBanners","DormPage","dormName","reviewData","_s","data","setData","fetchReviews","response","fetch","method","headers","body","JSON","stringify","ok","Error","json","error","console","navigate","handleWriteReviewRouting","state","reviews","map","val","userName","semester","rating","reviewTitle","review","fileName","_jsxFileName","lineNumber","columnNumber","className","container","children","style","backgroundImage","backgroundPosition","backgroundRepeat","backgroundSize","width","minHeight","bannerText","reviewsTableHeader","writeReview","variant","onClick","reviewsTable","_c","$RefreshReg$"],"sources":["/Users/wilson/Documents/rate-my-dorm/frontend/src/pages/DormPage.tsx"],"sourcesContent":["import React, { useState, useEffect, FC } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport styles from \"../styles/dormpage.module.css\";\nimport Review from \"../components/Review\";\nimport Button from \"@mui/material/Button\";\nimport Nav from \"../components/Nav\";\nimport Footer from \"../components/Footer\";\n\nimport MZSQ from \"../assets/manzanita_banner.jpg\";\nimport MPW from \"../assets/mary-park-hall.jpg\";\nimport MWH from \"../assets/mary-ward-hall.jpg\";\nimport TCS from \"../assets/towers-at-centennial-square.jpg\";\nimport TJS from \"../assets/towers-junior-suite.png\";\nimport UPS from \"../assets/university-park-south.jpg\";\nimport UPN from \"../assets/university-park-north.jpg\";\nimport VCS from \"../assets/village-at-centennial-square.jpg\";\nimport WGC from \"../assets/west-grove-common.jpg\";\n\nconst dormBanners: any = {\n  \"Manzanita Square\": MZSQ,\n  \"Mary Park Hall\": MPW,\n  \"Mary Ward Hall\": MWH,\n  \"Towers At Centennial Square\": TCS,\n  \"Towers At Junior Suites\": TJS,\n  \"University Park South\": UPS,\n  \"University Park North\": UPN,\n  \"Village At Centennial Square\": VCS,\n  \"West Grove Common\": WGC,\n};\n\ninterface ReviewData {\n  userName: string;\n  dorm: string;\n  semester: string;\n  rating: number;\n  reviewTitle: string;\n  review: string;\n}\n\ninterface DormPageData {\n  dormName: string;\n  reviewData: ReviewData[];\n}\n\nconst DormPage: FC<DormPageData> = ({ dormName, reviewData }) => {\n  const [data, setData] = useState(reviewData);\n\n  useEffect(() => {\n    // Function to fetch reviews for a dorm\n    const fetchReviews = async () => {\n      try {\n        const response = await fetch(\"http://localhost:4000/api/get-reviews\", {\n          method: \"POST\", // POST method to send data\n          headers: {\n            \"Content-Type\": \"application/json\", // Ensures data is sent in JSON format\n          },\n          body: JSON.stringify({ dormName }), // Passing dormName in the request body\n        });\n\n        if (!response.ok) throw new Error(\"Failed to fetch reviews\");\n\n        const data = await response.json();\n        setData(data); // Set the reviews in state\n      } catch (error) {\n        console.error(\"Error fetching reviews:\", error);\n      }\n    };\n\n    fetchReviews(); // Call the function on component mount\n  }, [dormName]); // Re-run the effect if dormName changes (if needed)\n  const navigate = useNavigate();\n\n  function handleWriteReviewRouting() {\n    navigate(\"/write-review\", { state: { dormName: dormName } });\n  }\n\n  const reviews = data.map((val) => {\n    return (\n      <Review\n        userName={val.userName}\n        semester={val.semester}\n        rating={val.rating}\n        reviewTitle={val.reviewTitle}\n        review={val.review}\n        key={uuidv4()}\n      />\n    );\n  });\n  return (\n    <div className={styles.container}>\n      <Nav />\n      <div\n        style={{\n          backgroundImage: `url(${dormBanners[dormName]})`,\n          backgroundPosition: \"center\",\n          backgroundRepeat: \"no-repeat\",\n          backgroundSize: \"100%\",\n          width: \"100%\",\n          minHeight: \"349px\",\n        }}\n      >\n        <h1 className={styles.bannerText}>{dormName}</h1>\n      </div>\n      <div className={styles.reviewsTableHeader}>\n        <p>Recent Reviews</p>\n        <Button\n          className={styles.writeReview}\n          variant=\"contained\"\n          onClick={handleWriteReviewRouting}\n        >\n          Write Review\n        </Button>\n      </div>\n      <div className={styles.reviewsTable}>{reviews}</div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default DormPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}