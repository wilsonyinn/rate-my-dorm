{"ast":null,"code":"var _CssBaseline, _InitColorSchemeScrip, _CssBaseline2;\nimport * as React from 'react';\nimport { useMediaQuery } from '@mui/material';\nimport { ThemeProvider, useColorScheme } from '@mui/material/styles';\nimport InitColorSchemeScript from '@mui/material/InitColorSchemeScript';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport invariant from 'invariant';\nimport { useLocalStorageState } from \"../useLocalStorageState/index.js\";\nimport { PaletteModeContext } from \"../shared/context.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst COLOR_SCHEME_ATTRIBUTE = 'data-toolpad-color-scheme';\nconst COLOR_SCHEME_STORAGE_KEY = 'toolpad-color-scheme';\nconst MODE_STORAGE_KEY = 'toolpad-mode';\nfunction usePreferredMode(window) {\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)', window && {\n    matchMedia: window.matchMedia\n  });\n  return prefersDarkMode ? 'dark' : 'light';\n}\nfunction isCssVarsTheme(theme) {\n  return 'vars' in theme;\n}\n/**\n * Compatibility layer for classic v5 themes. It will handle state management for the theme switcher.\n * In the v6 theme, this state management is handled by `useColorScheme`. But this hook will crash if\n * not run under context with a css vars theme.\n */\nfunction LegacyThemeProvider(props) {\n  var _appWindow$document;\n  const {\n    children,\n    theme,\n    window: appWindow\n  } = props;\n  invariant(!isCssVarsTheme(theme), 'This provider only accepts legacy themes.');\n  const isDualTheme = 'light' in theme || 'dark' in theme;\n  const preferredMode = usePreferredMode(appWindow);\n  const [userMode, setUserMode] = useLocalStorageState(MODE_STORAGE_KEY, 'system');\n  const paletteMode = !userMode || userMode === 'system' ? preferredMode : userMode;\n  const dualAwareTheme = React.useMemo(() => {\n    var _theme;\n    return isDualTheme ? (_theme = theme[paletteMode === 'dark' ? 'dark' : 'light']) !== null && _theme !== void 0 ? _theme : theme[paletteMode === 'dark' ? 'light' : 'dark'] : theme;\n  }, [isDualTheme, paletteMode, theme]);\n\n  // The v5 shim, based on local state\n  const paletteModeContextValue = React.useMemo(() => ({\n    paletteMode,\n    setPaletteMode: setUserMode,\n    isDualTheme\n  }), [isDualTheme, paletteMode, setUserMode]);\n  return /*#__PURE__*/_jsx(ThemeProvider, {\n    theme: dualAwareTheme,\n    documentNode: appWindow === null || appWindow === void 0 ? void 0 : appWindow.document,\n    colorSchemeNode: appWindow === null || appWindow === void 0 || (_appWindow$document = appWindow.document) === null || _appWindow$document === void 0 ? void 0 : _appWindow$document.body,\n    disableNestedContext: true,\n    colorSchemeStorageKey: COLOR_SCHEME_STORAGE_KEY,\n    modeStorageKey: MODE_STORAGE_KEY,\n    children: /*#__PURE__*/_jsxs(PaletteModeContext.Provider, {\n      value: paletteModeContextValue,\n      children: [_CssBaseline || (_CssBaseline = /*#__PURE__*/_jsx(CssBaseline, {\n        enableColorScheme: true\n      })), children]\n    })\n  });\n}\nfunction CssVarsPaletteModeProvider(props) {\n  const {\n    children,\n    window: appWindow\n  } = props;\n  const preferredMode = usePreferredMode(appWindow);\n  const {\n    mode,\n    setMode,\n    allColorSchemes\n  } = useColorScheme();\n\n  // The v6 API, based on `useColorScheme`\n  const paletteModeContextValue = React.useMemo(() => {\n    return {\n      paletteMode: !mode || mode === 'system' ? preferredMode : mode,\n      setPaletteMode: setMode,\n      isDualTheme: allColorSchemes.length > 1\n    };\n  }, [allColorSchemes, mode, preferredMode, setMode]);\n  return /*#__PURE__*/_jsx(PaletteModeContext.Provider, {\n    value: paletteModeContextValue,\n    children: children\n  });\n}\nfunction CssVarsThemeProvider(props) {\n  const {\n    children,\n    theme,\n    window: appWindow\n  } = props;\n  invariant(isCssVarsTheme(theme), 'This provider only accepts CSS vars themes.');\n  return /*#__PURE__*/_jsxs(ThemeProvider, {\n    theme: theme,\n    documentNode: appWindow === null || appWindow === void 0 ? void 0 : appWindow.document,\n    colorSchemeNode: appWindow === null || appWindow === void 0 ? void 0 : appWindow.document.documentElement,\n    disableNestedContext: true,\n    colorSchemeStorageKey: COLOR_SCHEME_STORAGE_KEY,\n    modeStorageKey: MODE_STORAGE_KEY,\n    children: [_InitColorSchemeScrip || (_InitColorSchemeScrip = /*#__PURE__*/_jsx(InitColorSchemeScript, {\n      attribute: COLOR_SCHEME_ATTRIBUTE,\n      colorSchemeStorageKey: COLOR_SCHEME_STORAGE_KEY,\n      modeStorageKey: MODE_STORAGE_KEY\n    })), /*#__PURE__*/_jsxs(CssVarsPaletteModeProvider, {\n      window: appWindow,\n      children: [_CssBaseline2 || (_CssBaseline2 = /*#__PURE__*/_jsx(CssBaseline, {\n        enableColorScheme: true\n      })), children]\n    })]\n  });\n}\n/**\n * @ignore - internal component.\n */\nfunction AppThemeProvider(props) {\n  const {\n    children,\n    theme,\n    ...rest\n  } = props;\n  const useCssVarsProvider = isCssVarsTheme(theme);\n  return useCssVarsProvider ? /*#__PURE__*/_jsx(CssVarsThemeProvider, {\n    theme: theme,\n    ...rest,\n    children: children\n  }) : /*#__PURE__*/_jsx(LegacyThemeProvider, {\n    theme: theme,\n    ...rest,\n    children: children\n  });\n}\nexport { AppThemeProvider };","map":{"version":3,"names":["_CssBaseline","_InitColorSchemeScrip","_CssBaseline2","React","useMediaQuery","ThemeProvider","useColorScheme","InitColorSchemeScript","CssBaseline","invariant","useLocalStorageState","PaletteModeContext","jsx","_jsx","jsxs","_jsxs","COLOR_SCHEME_ATTRIBUTE","COLOR_SCHEME_STORAGE_KEY","MODE_STORAGE_KEY","usePreferredMode","window","prefersDarkMode","matchMedia","isCssVarsTheme","theme","LegacyThemeProvider","props","_appWindow$document","children","appWindow","isDualTheme","preferredMode","userMode","setUserMode","paletteMode","dualAwareTheme","useMemo","_theme","paletteModeContextValue","setPaletteMode","documentNode","document","colorSchemeNode","body","disableNestedContext","colorSchemeStorageKey","modeStorageKey","Provider","value","enableColorScheme","CssVarsPaletteModeProvider","mode","setMode","allColorSchemes","length","CssVarsThemeProvider","documentElement","attribute","AppThemeProvider","rest","useCssVarsProvider"],"sources":["/Users/wilson/Documents/rate-my-dorm/node_modules/@toolpad/core/AppProvider/AppThemeProvider.js"],"sourcesContent":["var _CssBaseline, _InitColorSchemeScrip, _CssBaseline2;\nimport * as React from 'react';\nimport { useMediaQuery } from '@mui/material';\nimport { ThemeProvider, useColorScheme } from '@mui/material/styles';\nimport InitColorSchemeScript from '@mui/material/InitColorSchemeScript';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport invariant from 'invariant';\nimport { useLocalStorageState } from \"../useLocalStorageState/index.js\";\nimport { PaletteModeContext } from \"../shared/context.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst COLOR_SCHEME_ATTRIBUTE = 'data-toolpad-color-scheme';\nconst COLOR_SCHEME_STORAGE_KEY = 'toolpad-color-scheme';\nconst MODE_STORAGE_KEY = 'toolpad-mode';\nfunction usePreferredMode(window) {\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)', window && {\n    matchMedia: window.matchMedia\n  });\n  return prefersDarkMode ? 'dark' : 'light';\n}\nfunction isCssVarsTheme(theme) {\n  return 'vars' in theme;\n}\n/**\n * Compatibility layer for classic v5 themes. It will handle state management for the theme switcher.\n * In the v6 theme, this state management is handled by `useColorScheme`. But this hook will crash if\n * not run under context with a css vars theme.\n */\nfunction LegacyThemeProvider(props) {\n  const {\n    children,\n    theme,\n    window: appWindow\n  } = props;\n  invariant(!isCssVarsTheme(theme), 'This provider only accepts legacy themes.');\n  const isDualTheme = 'light' in theme || 'dark' in theme;\n  const preferredMode = usePreferredMode(appWindow);\n  const [userMode, setUserMode] = useLocalStorageState(MODE_STORAGE_KEY, 'system');\n  const paletteMode = !userMode || userMode === 'system' ? preferredMode : userMode;\n  const dualAwareTheme = React.useMemo(() => isDualTheme ? theme[paletteMode === 'dark' ? 'dark' : 'light'] ?? theme[paletteMode === 'dark' ? 'light' : 'dark'] : theme, [isDualTheme, paletteMode, theme]);\n\n  // The v5 shim, based on local state\n  const paletteModeContextValue = React.useMemo(() => ({\n    paletteMode,\n    setPaletteMode: setUserMode,\n    isDualTheme\n  }), [isDualTheme, paletteMode, setUserMode]);\n  return /*#__PURE__*/_jsx(ThemeProvider, {\n    theme: dualAwareTheme,\n    documentNode: appWindow?.document,\n    colorSchemeNode: appWindow?.document?.body,\n    disableNestedContext: true,\n    colorSchemeStorageKey: COLOR_SCHEME_STORAGE_KEY,\n    modeStorageKey: MODE_STORAGE_KEY,\n    children: /*#__PURE__*/_jsxs(PaletteModeContext.Provider, {\n      value: paletteModeContextValue,\n      children: [_CssBaseline || (_CssBaseline = /*#__PURE__*/_jsx(CssBaseline, {\n        enableColorScheme: true\n      })), children]\n    })\n  });\n}\nfunction CssVarsPaletteModeProvider(props) {\n  const {\n    children,\n    window: appWindow\n  } = props;\n  const preferredMode = usePreferredMode(appWindow);\n  const {\n    mode,\n    setMode,\n    allColorSchemes\n  } = useColorScheme();\n\n  // The v6 API, based on `useColorScheme`\n  const paletteModeContextValue = React.useMemo(() => {\n    return {\n      paletteMode: !mode || mode === 'system' ? preferredMode : mode,\n      setPaletteMode: setMode,\n      isDualTheme: allColorSchemes.length > 1\n    };\n  }, [allColorSchemes, mode, preferredMode, setMode]);\n  return /*#__PURE__*/_jsx(PaletteModeContext.Provider, {\n    value: paletteModeContextValue,\n    children: children\n  });\n}\nfunction CssVarsThemeProvider(props) {\n  const {\n    children,\n    theme,\n    window: appWindow\n  } = props;\n  invariant(isCssVarsTheme(theme), 'This provider only accepts CSS vars themes.');\n  return /*#__PURE__*/_jsxs(ThemeProvider, {\n    theme: theme,\n    documentNode: appWindow?.document,\n    colorSchemeNode: appWindow?.document.documentElement,\n    disableNestedContext: true,\n    colorSchemeStorageKey: COLOR_SCHEME_STORAGE_KEY,\n    modeStorageKey: MODE_STORAGE_KEY,\n    children: [_InitColorSchemeScrip || (_InitColorSchemeScrip = /*#__PURE__*/_jsx(InitColorSchemeScript, {\n      attribute: COLOR_SCHEME_ATTRIBUTE,\n      colorSchemeStorageKey: COLOR_SCHEME_STORAGE_KEY,\n      modeStorageKey: MODE_STORAGE_KEY\n    })), /*#__PURE__*/_jsxs(CssVarsPaletteModeProvider, {\n      window: appWindow,\n      children: [_CssBaseline2 || (_CssBaseline2 = /*#__PURE__*/_jsx(CssBaseline, {\n        enableColorScheme: true\n      })), children]\n    })]\n  });\n}\n/**\n * @ignore - internal component.\n */\nfunction AppThemeProvider(props) {\n  const {\n    children,\n    theme,\n    ...rest\n  } = props;\n  const useCssVarsProvider = isCssVarsTheme(theme);\n  return useCssVarsProvider ? /*#__PURE__*/_jsx(CssVarsThemeProvider, {\n    theme: theme,\n    ...rest,\n    children: children\n  }) : /*#__PURE__*/_jsx(LegacyThemeProvider, {\n    theme: theme,\n    ...rest,\n    children: children\n  });\n}\nexport { AppThemeProvider };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}