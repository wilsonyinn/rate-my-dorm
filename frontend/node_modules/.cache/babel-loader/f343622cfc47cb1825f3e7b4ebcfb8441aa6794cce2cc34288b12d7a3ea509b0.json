{"ast":null,"code":"import { getPath } from '@mui/system/style';\nimport { alpha } from '@mui/system/colorManipulator';\nconst getTextDecoration = _ref => {\n  let {\n    theme,\n    ownerState\n  } = _ref;\n  const transformedColor = ownerState.color;\n  const color = getPath(theme, \"palette.\".concat(transformedColor), false) || ownerState.color;\n  const channelColor = getPath(theme, \"palette.\".concat(transformedColor, \"Channel\"));\n  if ('vars' in theme && channelColor) {\n    return \"rgba(\".concat(channelColor, \" / 0.4)\");\n  }\n  return alpha(color, 0.4);\n};\nexport default getTextDecoration;","map":{"version":3,"names":["getPath","alpha","getTextDecoration","_ref","theme","ownerState","transformedColor","color","concat","channelColor"],"sources":["/Users/wilson/Documents/rate-my-dorm/node_modules/@mui/material/Link/getTextDecoration.js"],"sourcesContent":["import { getPath } from '@mui/system/style';\nimport { alpha } from '@mui/system/colorManipulator';\nconst getTextDecoration = ({\n  theme,\n  ownerState\n}) => {\n  const transformedColor = ownerState.color;\n  const color = getPath(theme, `palette.${transformedColor}`, false) || ownerState.color;\n  const channelColor = getPath(theme, `palette.${transformedColor}Channel`);\n  if ('vars' in theme && channelColor) {\n    return `rgba(${channelColor} / 0.4)`;\n  }\n  return alpha(color, 0.4);\n};\nexport default getTextDecoration;"],"mappings":"AAAA,SAASA,OAAO,QAAQ,mBAAmB;AAC3C,SAASC,KAAK,QAAQ,8BAA8B;AACpD,MAAMC,iBAAiB,GAAGC,IAAA,IAGpB;EAAA,IAHqB;IACzBC,KAAK;IACLC;EACF,CAAC,GAAAF,IAAA;EACC,MAAMG,gBAAgB,GAAGD,UAAU,CAACE,KAAK;EACzC,MAAMA,KAAK,GAAGP,OAAO,CAACI,KAAK,aAAAI,MAAA,CAAaF,gBAAgB,GAAI,KAAK,CAAC,IAAID,UAAU,CAACE,KAAK;EACtF,MAAME,YAAY,GAAGT,OAAO,CAACI,KAAK,aAAAI,MAAA,CAAaF,gBAAgB,YAAS,CAAC;EACzE,IAAI,MAAM,IAAIF,KAAK,IAAIK,YAAY,EAAE;IACnC,eAAAD,MAAA,CAAeC,YAAY;EAC7B;EACA,OAAOR,KAAK,CAACM,KAAK,EAAE,GAAG,CAAC;AAC1B,CAAC;AACD,eAAeL,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}