{"ast":null,"code":"'use client';\n\nvar _DarkModeIcon, _LightModeIcon;\nimport * as React from 'react';\nimport { useTheme } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport Tooltip from '@mui/material/Tooltip';\nimport DarkModeIcon from '@mui/icons-material/DarkMode';\nimport LightModeIcon from '@mui/icons-material/LightMode';\nimport useSsr from '@toolpad/utils/hooks/useSsr';\nimport { PaletteModeContext } from \"../shared/context.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction ThemeSwitcher() {\n  const isSsr = useSsr();\n  const theme = useTheme();\n  const {\n    paletteMode,\n    setPaletteMode,\n    isDualTheme\n  } = React.useContext(PaletteModeContext);\n  const toggleMode = React.useCallback(() => {\n    setPaletteMode(paletteMode === 'dark' ? 'light' : 'dark');\n  }, [paletteMode, setPaletteMode]);\n  return isDualTheme ? /*#__PURE__*/_jsx(Tooltip, {\n    title: isSsr ? 'Switch mode' : `${paletteMode === 'dark' ? 'Light' : 'Dark'} mode`,\n    enterDelay: 1000,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      children: /*#__PURE__*/_jsx(IconButton, {\n        \"aria-label\": isSsr ? 'Switch theme mode' : `Switch to ${paletteMode === 'dark' ? 'light' : 'dark'} mode`,\n        onClick: toggleMode,\n        sx: {\n          color: (theme.vars ?? theme).palette.primary.dark\n        },\n        children: theme.getColorSchemeSelector ? /*#__PURE__*/_jsxs(React.Fragment, {\n          children: [/*#__PURE__*/_jsx(DarkModeIcon, {\n            sx: {\n              display: 'inline',\n              [theme.getColorSchemeSelector('dark')]: {\n                display: 'none'\n              }\n            }\n          }), /*#__PURE__*/_jsx(LightModeIcon, {\n            sx: {\n              display: 'none',\n              [theme.getColorSchemeSelector('dark')]: {\n                display: 'inline'\n              }\n            }\n          })]\n        }) : /*#__PURE__*/_jsx(React.Fragment, {\n          children: isSsr || paletteMode !== 'dark' ? _DarkModeIcon || (_DarkModeIcon = /*#__PURE__*/_jsx(DarkModeIcon, {})) : _LightModeIcon || (_LightModeIcon = /*#__PURE__*/_jsx(LightModeIcon, {}))\n        })\n      })\n    })\n  }) : null;\n}\nexport { ThemeSwitcher };","map":{"version":3,"names":["_DarkModeIcon","_LightModeIcon","React","useTheme","IconButton","Tooltip","DarkModeIcon","LightModeIcon","useSsr","PaletteModeContext","jsx","_jsx","jsxs","_jsxs","ThemeSwitcher","isSsr","theme","paletteMode","setPaletteMode","isDualTheme","useContext","toggleMode","useCallback","title","enterDelay","children","onClick","sx","color","vars","palette","primary","dark","getColorSchemeSelector","Fragment","display"],"sources":["/Users/wilson/Documents/rate-my-dorm/node_modules/@toolpad/core/DashboardLayout/ThemeSwitcher.js"],"sourcesContent":["'use client';\n\nvar _DarkModeIcon, _LightModeIcon;\nimport * as React from 'react';\nimport { useTheme } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport Tooltip from '@mui/material/Tooltip';\nimport DarkModeIcon from '@mui/icons-material/DarkMode';\nimport LightModeIcon from '@mui/icons-material/LightMode';\nimport useSsr from '@toolpad/utils/hooks/useSsr';\nimport { PaletteModeContext } from \"../shared/context.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction ThemeSwitcher() {\n  const isSsr = useSsr();\n  const theme = useTheme();\n  const {\n    paletteMode,\n    setPaletteMode,\n    isDualTheme\n  } = React.useContext(PaletteModeContext);\n  const toggleMode = React.useCallback(() => {\n    setPaletteMode(paletteMode === 'dark' ? 'light' : 'dark');\n  }, [paletteMode, setPaletteMode]);\n  return isDualTheme ? /*#__PURE__*/_jsx(Tooltip, {\n    title: isSsr ? 'Switch mode' : `${paletteMode === 'dark' ? 'Light' : 'Dark'} mode`,\n    enterDelay: 1000,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      children: /*#__PURE__*/_jsx(IconButton, {\n        \"aria-label\": isSsr ? 'Switch theme mode' : `Switch to ${paletteMode === 'dark' ? 'light' : 'dark'} mode`,\n        onClick: toggleMode,\n        sx: {\n          color: (theme.vars ?? theme).palette.primary.dark\n        },\n        children: theme.getColorSchemeSelector ? /*#__PURE__*/_jsxs(React.Fragment, {\n          children: [/*#__PURE__*/_jsx(DarkModeIcon, {\n            sx: {\n              display: 'inline',\n              [theme.getColorSchemeSelector('dark')]: {\n                display: 'none'\n              }\n            }\n          }), /*#__PURE__*/_jsx(LightModeIcon, {\n            sx: {\n              display: 'none',\n              [theme.getColorSchemeSelector('dark')]: {\n                display: 'inline'\n              }\n            }\n          })]\n        }) : /*#__PURE__*/_jsx(React.Fragment, {\n          children: isSsr || paletteMode !== 'dark' ? _DarkModeIcon || (_DarkModeIcon = /*#__PURE__*/_jsx(DarkModeIcon, {})) : _LightModeIcon || (_LightModeIcon = /*#__PURE__*/_jsx(LightModeIcon, {}))\n        })\n      })\n    })\n  }) : null;\n}\nexport { ThemeSwitcher };"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,aAAa,EAAEC,cAAc;AACjC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,QAAQ,QAAQ,eAAe;AACxC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,YAAY,MAAM,8BAA8B;AACvD,OAAOC,aAAa,MAAM,+BAA+B;AACzD,OAAOC,MAAM,MAAM,6BAA6B;AAChD,SAASC,kBAAkB,QAAQ,sBAAsB;;AAEzD;AACA;AACA;AACA,SAASC,GAAG,IAAIC,IAAI,EAAEC,IAAI,IAAIC,KAAK,QAAQ,mBAAmB;AAC9D,SAASC,aAAaA,CAAA,EAAG;EACvB,MAAMC,KAAK,GAAGP,MAAM,CAAC,CAAC;EACtB,MAAMQ,KAAK,GAAGb,QAAQ,CAAC,CAAC;EACxB,MAAM;IACJc,WAAW;IACXC,cAAc;IACdC;EACF,CAAC,GAAGjB,KAAK,CAACkB,UAAU,CAACX,kBAAkB,CAAC;EACxC,MAAMY,UAAU,GAAGnB,KAAK,CAACoB,WAAW,CAAC,MAAM;IACzCJ,cAAc,CAACD,WAAW,KAAK,MAAM,GAAG,OAAO,GAAG,MAAM,CAAC;EAC3D,CAAC,EAAE,CAACA,WAAW,EAAEC,cAAc,CAAC,CAAC;EACjC,OAAOC,WAAW,GAAG,aAAaR,IAAI,CAACN,OAAO,EAAE;IAC9CkB,KAAK,EAAER,KAAK,GAAG,aAAa,GAAG,GAAGE,WAAW,KAAK,MAAM,GAAG,OAAO,GAAG,MAAM,OAAO;IAClFO,UAAU,EAAE,IAAI;IAChBC,QAAQ,EAAE,aAAad,IAAI,CAAC,KAAK,EAAE;MACjCc,QAAQ,EAAE,aAAad,IAAI,CAACP,UAAU,EAAE;QACtC,YAAY,EAAEW,KAAK,GAAG,mBAAmB,GAAG,aAAaE,WAAW,KAAK,MAAM,GAAG,OAAO,GAAG,MAAM,OAAO;QACzGS,OAAO,EAAEL,UAAU;QACnBM,EAAE,EAAE;UACFC,KAAK,EAAE,CAACZ,KAAK,CAACa,IAAI,IAAIb,KAAK,EAAEc,OAAO,CAACC,OAAO,CAACC;QAC/C,CAAC;QACDP,QAAQ,EAAET,KAAK,CAACiB,sBAAsB,GAAG,aAAapB,KAAK,CAACX,KAAK,CAACgC,QAAQ,EAAE;UAC1ET,QAAQ,EAAE,CAAC,aAAad,IAAI,CAACL,YAAY,EAAE;YACzCqB,EAAE,EAAE;cACFQ,OAAO,EAAE,QAAQ;cACjB,CAACnB,KAAK,CAACiB,sBAAsB,CAAC,MAAM,CAAC,GAAG;gBACtCE,OAAO,EAAE;cACX;YACF;UACF,CAAC,CAAC,EAAE,aAAaxB,IAAI,CAACJ,aAAa,EAAE;YACnCoB,EAAE,EAAE;cACFQ,OAAO,EAAE,MAAM;cACf,CAACnB,KAAK,CAACiB,sBAAsB,CAAC,MAAM,CAAC,GAAG;gBACtCE,OAAO,EAAE;cACX;YACF;UACF,CAAC,CAAC;QACJ,CAAC,CAAC,GAAG,aAAaxB,IAAI,CAACT,KAAK,CAACgC,QAAQ,EAAE;UACrCT,QAAQ,EAAEV,KAAK,IAAIE,WAAW,KAAK,MAAM,GAAGjB,aAAa,KAAKA,aAAa,GAAG,aAAaW,IAAI,CAACL,YAAY,EAAE,CAAC,CAAC,CAAC,CAAC,GAAGL,cAAc,KAAKA,cAAc,GAAG,aAAaU,IAAI,CAACJ,aAAa,EAAE,CAAC,CAAC,CAAC;QAC/L,CAAC;MACH,CAAC;IACH,CAAC;EACH,CAAC,CAAC,GAAG,IAAI;AACX;AACA,SAASO,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}