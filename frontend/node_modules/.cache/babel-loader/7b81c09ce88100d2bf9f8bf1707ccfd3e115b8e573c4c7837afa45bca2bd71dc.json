{"ast":null,"code":"var _CloseIcon;\nimport * as React from 'react';\nimport { Alert, Badge, Button, IconButton, Snackbar, SnackbarContent } from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { useNonNullableContext } from '@toolpad/utils/react';\nimport useSlotProps from '@mui/utils/useSlotProps';\nimport { NotificationsContext } from \"./NotificationsContext.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst closeText = 'Close';\nconst RootPropsContext = /*#__PURE__*/React.createContext(null);\nfunction Notification(_ref) {\n  var _props$slots$snackbar, _props$slots, _props$slotProps;\n  let {\n    notificationKey,\n    open,\n    message,\n    options,\n    badge\n  } = _ref;\n  const {\n    close\n  } = useNonNullableContext(NotificationsContext);\n  const {\n    severity,\n    actionText,\n    onAction,\n    autoHideDuration\n  } = options;\n  const handleClose = React.useCallback((event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    close(notificationKey);\n  }, [notificationKey, close]);\n  const action = /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [onAction ? /*#__PURE__*/_jsx(Button, {\n      color: \"inherit\",\n      size: \"small\",\n      onClick: onAction,\n      children: actionText !== null && actionText !== void 0 ? actionText : 'Action'\n    }) : null, /*#__PURE__*/_jsx(IconButton, {\n      size: \"small\",\n      \"aria-label\": closeText,\n      title: closeText,\n      color: \"inherit\",\n      onClick: handleClose,\n      children: _CloseIcon || (_CloseIcon = /*#__PURE__*/_jsx(CloseIcon, {\n        fontSize: \"small\"\n      }))\n    })]\n  });\n  const props = React.useContext(RootPropsContext);\n  const SnackbarComponent = (_props$slots$snackbar = props === null || props === void 0 || (_props$slots = props.slots) === null || _props$slots === void 0 ? void 0 : _props$slots.snackbar) !== null && _props$slots$snackbar !== void 0 ? _props$slots$snackbar : Snackbar;\n  const snackbarSlotProps = useSlotProps({\n    elementType: SnackbarComponent,\n    ownerState: props,\n    externalSlotProps: props === null || props === void 0 || (_props$slotProps = props.slotProps) === null || _props$slotProps === void 0 ? void 0 : _props$slotProps.snackbar,\n    additionalProps: {\n      open,\n      autoHideDuration,\n      onClose: handleClose,\n      action\n    }\n  });\n  return /*#__PURE__*/_jsx(SnackbarComponent, {\n    ...snackbarSlotProps,\n    children: /*#__PURE__*/_jsx(Badge, {\n      badgeContent: badge,\n      color: \"primary\",\n      sx: {\n        width: '100%'\n      },\n      children: severity ? /*#__PURE__*/_jsx(Alert, {\n        severity: severity,\n        sx: {\n          width: '100%'\n        },\n        action: action,\n        children: message\n      }) : /*#__PURE__*/_jsx(SnackbarContent, {\n        message: message,\n        action: action\n      })\n    })\n  }, notificationKey);\n}\nfunction Notifications(_ref2) {\n  var _state$queue$;\n  let {\n    state\n  } = _ref2;\n  const currentNotification = (_state$queue$ = state.queue[0]) !== null && _state$queue$ !== void 0 ? _state$queue$ : null;\n  return currentNotification ? /*#__PURE__*/_jsx(Notification, {\n    ...currentNotification,\n    badge: state.queue.length > 1 ? String(state.queue.length) : null\n  }) : null;\n}\nlet nextId = 1;\n\n/**\n * Provider for Notifications. The subtree of this component can use the `useNotifications` hook to\n * access the notifications API. The notifications are shown in the same order they are requested.\n *\n * Demos:\n *\n * - [Sign-in Page](https://mui.com/toolpad/core/react-sign-in-page/)\n * - [useNotifications](https://mui.com/toolpad/core/react-use-notifications/)\n *\n * API:\n *\n * - [NotificationsProvider API](https://mui.com/toolpad/core/api/notifications-provider)\n */\nfunction NotificationsProvider(props) {\n  const {\n    children\n  } = props;\n  const [state, setState] = React.useState({\n    queue: []\n  });\n  const show = React.useCallback(function (message) {\n    var _options$key;\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const notificationKey = (_options$key = options.key) !== null && _options$key !== void 0 ? _options$key : \"::toolpad-internal::notification::\".concat(nextId);\n    nextId += 1;\n    setState(prev => {\n      if (prev.queue.some(n => n.notificationKey === notificationKey)) {\n        // deduplicate by key\n        return prev;\n      }\n      return {\n        ...prev,\n        queue: [...prev.queue, {\n          message,\n          options,\n          notificationKey,\n          open: true\n        }]\n      };\n    });\n    return notificationKey;\n  }, []);\n  const close = React.useCallback(key => {\n    setState(prev => ({\n      ...prev,\n      queue: prev.queue.filter(n => n.notificationKey !== key)\n    }));\n  }, []);\n  const contextValue = React.useMemo(() => ({\n    show,\n    close\n  }), [show, close]);\n  return /*#__PURE__*/_jsx(RootPropsContext.Provider, {\n    value: props,\n    children: /*#__PURE__*/_jsxs(NotificationsContext.Provider, {\n      value: contextValue,\n      children: [children, /*#__PURE__*/_jsx(Notifications, {\n        state: state\n      })]\n    })\n  });\n}\nexport { NotificationsProvider };","map":{"version":3,"names":["_CloseIcon","React","Alert","Badge","Button","IconButton","Snackbar","SnackbarContent","CloseIcon","useNonNullableContext","useSlotProps","NotificationsContext","jsx","_jsx","jsxs","_jsxs","closeText","RootPropsContext","createContext","Notification","_ref","_props$slots$snackbar","_props$slots","_props$slotProps","notificationKey","open","message","options","badge","close","severity","actionText","onAction","autoHideDuration","handleClose","useCallback","event","reason","action","Fragment","children","color","size","onClick","title","fontSize","props","useContext","SnackbarComponent","slots","snackbar","snackbarSlotProps","elementType","ownerState","externalSlotProps","slotProps","additionalProps","onClose","badgeContent","sx","width","Notifications","_ref2","_state$queue$","state","currentNotification","queue","length","String","nextId","NotificationsProvider","setState","useState","show","_options$key","arguments","undefined","key","concat","prev","some","n","filter","contextValue","useMemo","Provider","value"],"sources":["/Users/wilson/Documents/rate-my-dorm/node_modules/@toolpad/core/useNotifications/NotificationsProvider.js"],"sourcesContent":["var _CloseIcon;\nimport * as React from 'react';\nimport { Alert, Badge, Button, IconButton, Snackbar, SnackbarContent } from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { useNonNullableContext } from '@toolpad/utils/react';\nimport useSlotProps from '@mui/utils/useSlotProps';\nimport { NotificationsContext } from \"./NotificationsContext.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst closeText = 'Close';\nconst RootPropsContext = /*#__PURE__*/React.createContext(null);\nfunction Notification({\n  notificationKey,\n  open,\n  message,\n  options,\n  badge\n}) {\n  const {\n    close\n  } = useNonNullableContext(NotificationsContext);\n  const {\n    severity,\n    actionText,\n    onAction,\n    autoHideDuration\n  } = options;\n  const handleClose = React.useCallback((event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    close(notificationKey);\n  }, [notificationKey, close]);\n  const action = /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [onAction ? /*#__PURE__*/_jsx(Button, {\n      color: \"inherit\",\n      size: \"small\",\n      onClick: onAction,\n      children: actionText ?? 'Action'\n    }) : null, /*#__PURE__*/_jsx(IconButton, {\n      size: \"small\",\n      \"aria-label\": closeText,\n      title: closeText,\n      color: \"inherit\",\n      onClick: handleClose,\n      children: _CloseIcon || (_CloseIcon = /*#__PURE__*/_jsx(CloseIcon, {\n        fontSize: \"small\"\n      }))\n    })]\n  });\n  const props = React.useContext(RootPropsContext);\n  const SnackbarComponent = props?.slots?.snackbar ?? Snackbar;\n  const snackbarSlotProps = useSlotProps({\n    elementType: SnackbarComponent,\n    ownerState: props,\n    externalSlotProps: props?.slotProps?.snackbar,\n    additionalProps: {\n      open,\n      autoHideDuration,\n      onClose: handleClose,\n      action\n    }\n  });\n  return /*#__PURE__*/_jsx(SnackbarComponent, {\n    ...snackbarSlotProps,\n    children: /*#__PURE__*/_jsx(Badge, {\n      badgeContent: badge,\n      color: \"primary\",\n      sx: {\n        width: '100%'\n      },\n      children: severity ? /*#__PURE__*/_jsx(Alert, {\n        severity: severity,\n        sx: {\n          width: '100%'\n        },\n        action: action,\n        children: message\n      }) : /*#__PURE__*/_jsx(SnackbarContent, {\n        message: message,\n        action: action\n      })\n    })\n  }, notificationKey);\n}\nfunction Notifications({\n  state\n}) {\n  const currentNotification = state.queue[0] ?? null;\n  return currentNotification ? /*#__PURE__*/_jsx(Notification, {\n    ...currentNotification,\n    badge: state.queue.length > 1 ? String(state.queue.length) : null\n  }) : null;\n}\nlet nextId = 1;\n\n/**\n * Provider for Notifications. The subtree of this component can use the `useNotifications` hook to\n * access the notifications API. The notifications are shown in the same order they are requested.\n *\n * Demos:\n *\n * - [Sign-in Page](https://mui.com/toolpad/core/react-sign-in-page/)\n * - [useNotifications](https://mui.com/toolpad/core/react-use-notifications/)\n *\n * API:\n *\n * - [NotificationsProvider API](https://mui.com/toolpad/core/api/notifications-provider)\n */\nfunction NotificationsProvider(props) {\n  const {\n    children\n  } = props;\n  const [state, setState] = React.useState({\n    queue: []\n  });\n  const show = React.useCallback((message, options = {}) => {\n    const notificationKey = options.key ?? `::toolpad-internal::notification::${nextId}`;\n    nextId += 1;\n    setState(prev => {\n      if (prev.queue.some(n => n.notificationKey === notificationKey)) {\n        // deduplicate by key\n        return prev;\n      }\n      return {\n        ...prev,\n        queue: [...prev.queue, {\n          message,\n          options,\n          notificationKey,\n          open: true\n        }]\n      };\n    });\n    return notificationKey;\n  }, []);\n  const close = React.useCallback(key => {\n    setState(prev => ({\n      ...prev,\n      queue: prev.queue.filter(n => n.notificationKey !== key)\n    }));\n  }, []);\n  const contextValue = React.useMemo(() => ({\n    show,\n    close\n  }), [show, close]);\n  return /*#__PURE__*/_jsx(RootPropsContext.Provider, {\n    value: props,\n    children: /*#__PURE__*/_jsxs(NotificationsContext.Provider, {\n      value: contextValue,\n      children: [children, /*#__PURE__*/_jsx(Notifications, {\n        state: state\n      })]\n    })\n  });\n}\nexport { NotificationsProvider };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}