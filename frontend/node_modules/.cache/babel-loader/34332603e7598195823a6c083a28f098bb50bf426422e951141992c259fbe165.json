{"ast":null,"code":"import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function SessionAvatar(props) {\n  var _session$user, _session$user2, _session$user3;\n  const {\n    session,\n    ...rest\n  } = props;\n  return /*#__PURE__*/_jsx(Avatar, {\n    src: ((_session$user = session.user) === null || _session$user === void 0 ? void 0 : _session$user.image) || '',\n    alt: ((_session$user2 = session.user) === null || _session$user2 === void 0 ? void 0 : _session$user2.name) || ((_session$user3 = session.user) === null || _session$user3 === void 0 ? void 0 : _session$user3.email) || '',\n    ...rest\n  });\n}","map":{"version":3,"names":["React","Avatar","jsx","_jsx","SessionAvatar","props","_session$user","_session$user2","_session$user3","session","rest","src","user","image","alt","name","email"],"sources":["/Users/wilson/Documents/rate-my-dorm/node_modules/@toolpad/core/Account/SessionAvatar.js"],"sourcesContent":["import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function SessionAvatar(props) {\n  const {\n    session,\n    ...rest\n  } = props;\n  return /*#__PURE__*/_jsx(Avatar, {\n    src: session.user?.image || '',\n    alt: session.user?.name || session.user?.email || '',\n    ...rest\n  });\n}"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,MAAM,MAAM,sBAAsB;;AAEzC;AACA;AACA;AACA,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,OAAO,SAASC,aAAaA,CAACC,KAAK,EAAE;EAAA,IAAAC,aAAA,EAAAC,cAAA,EAAAC,cAAA;EACnC,MAAM;IACJC,OAAO;IACP,GAAGC;EACL,CAAC,GAAGL,KAAK;EACT,OAAO,aAAaF,IAAI,CAACF,MAAM,EAAE;IAC/BU,GAAG,EAAE,EAAAL,aAAA,GAAAG,OAAO,CAACG,IAAI,cAAAN,aAAA,uBAAZA,aAAA,CAAcO,KAAK,KAAI,EAAE;IAC9BC,GAAG,EAAE,EAAAP,cAAA,GAAAE,OAAO,CAACG,IAAI,cAAAL,cAAA,uBAAZA,cAAA,CAAcQ,IAAI,OAAAP,cAAA,GAAIC,OAAO,CAACG,IAAI,cAAAJ,cAAA,uBAAZA,cAAA,CAAcQ,KAAK,KAAI,EAAE;IACpD,GAAGN;EACL,CAAC,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}